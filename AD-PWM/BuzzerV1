#BuzzerV1
#Dosogne Guillaume 19/02

from machine import Pin,PWM,ADC
from time import sleep

Button = machine.Pin(16, machine.Pin.IN)
buzzer = PWM(Pin(27)) #Pin A1
Vol_Sensor = ADC(0)
Volume = 0
val = 1

def Update_Vol():
    global Volume
    Volume = Vol_Sensor.read_u16()
    
def Next(pin):
    global val
    val = val + 1
    if val > 2:
        val = 1
    
def DO(time):
    Update_Vol()
    buzzer.freq(1046) #DO
    buzzer.duty_u16(Volume)
    sleep(time)
def RE(time):
    Update_Vol()
    buzzer.freq(1175) #RE
    buzzer.duty_u16(Volume)
    sleep(time)
def MI(time):
    Update_Vol()
    buzzer.freq(1300) #MI
    buzzer.duty_u16(Volume)
    sleep(time)
def FA(time):
    Update_Vol()
    buzzer.freq(1397) #FA
    buzzer.duty_u16(Volume)
    sleep(time)
def SO(time):
    Update_Vol()
    buzzer.freq(1568) #SO
    buzzer.duty_u16(Volume)
    sleep(time)
def LA(time):
    Update_Vol()
    buzzer.freq(1760) #LA
    buzzer.duty_u16(Volume)
    sleep(time)
def SI(time):
    Update_Vol()
    buzzer.freq(1967) #SI
    buzzer.duty_u16(Volume)
    sleep(time)
def silence(time):
    buzzer.freq(18000)
    sleep(time)
    
def Melody1():
    DO(0.25)
    RE(0.25)
    MI(0.25)
    DO(0.25)
    
    MI(0.25)
    FA(0.25)
    SO(0.5)
    
    MI(0.25)
    FA(0.25)
    SO(0.5)
    
    SO(0.125)
    LA(0.125)
    SO(0.125)
    FA(0.125)
    MI(0.25)
    DO(0.25)
    
def Melody2():
    SI(0.15)
    LA(0.15)
    DO(0.25)
    RE(0.25)
    silence(0.05)
    LA(0.15)
    SO(0.15)
    DO(0.25)
    RE(0.25)
    silence(0.05)
    SO(0.15)
    MI(0.15)
    DO(0.25)
    RE(0.25)
    MI(0.5)
    silence(0.05)
    

Button.irq(trigger=machine.Pin.IRQ_FALLING, handler=Next)

while True :
    if val == 1:
        Melody1()
    elif val == 2:
        Melody2()

    

